extends layout

block gettingStarted
  p Read the <a href="/quick-introduction">Quick Introduction</a> on using uRequire to modularize your code. See how trivial <a href="/using-urequire">Using uRequire</a> is. Then learn more about Module Authoring and the <a href="/universal-module-format">Universal Module Format</a>.

block content
  .container
    .row-fluid
      .span9.page
        .hero-unit
          .home-header
            h1
              span.tag-line The JavaScript Universal Module Converter

          .whyclear
            h3 A Praise to Modules

          .why.left
            h2 Why use <em>modules</em> like AMD, Common/JS or Harmony/ES6 ?
            p Cause you want to write <em>modular code</em>, with clearly stated dependencies.
            p Code for humans to follow, that is maintainable & reusable.
            p The damnation of authoring Javascript as <strong>one huge file</strong> or <strong>concatenating</strong> mus-60t end!
            h5 Are you still concatenating .js files ?

          .why.right
            h2 Why use Module Loaders?
            p Cause with modern single page apps, you're not receiving just a REST on demand, but also executable code.
            P You want a proper dynamic code loading mechanism, either your web app is on the browser, the mobile and even nodejs.
            h5 Run <em>single page Apps</em> with truly dynamic code loading.

          .whyclear
            h3 You Require this
          .why.left
            h2 Why use uRequire ?
            p Cause module formats are incompatible in almost all terms: <strong>syntax, execution environment, capabilities, dependency/path resolution, plugins, semantics </strong>etc.
            p You want to write in one <a href="universal-module-format">Universal Module Format</a>, not each of those.
            p Greedy, you want all goodies from all of 'em! <em>Lucky you, uRequire does exactly this!</em>
            h5 If you have sensibly `define`d it, u`Require` will find it.

          .why.right
            h2 What will uRequire do ?
            p Help you write <strong>modular Javascript code once, run everywhere</strong>.
            p You will avoid boilerplate, yet use the full richness of modular development & module systems.
            p And voila, you 'll execute in all runtimes: <strong>Web/Script, Web/AMD, nodejs</strong>!
            h5 Focus only on what {matters: "your code"}. Then {execute:"everywhere"}.

          .technology
            .how-get-started
              h2 How do I get started?
              block gettingStarted

      .span3
        .well.sidebar-nav
          .latest-version
            h3 Latest Version
            ul
              li Stable: v0.4.1

          .latest-news
            h3 Latest News
            ul
              each article in news
                li
                  a(href='/blog/' + article.url)
                    span.title= article.title
                    span.date= article.postDate

          .getting-started
            h3 Getting Started
            block gettingStarted

          .social
            a.github(href='https://github.com/anodynos/urequire', alt='uRequire on GitHub')
              span.icon-github
            a.twitter(href='https://twitter.com/urequire/', alt='uRequire on Twitter')
              span.icon-twitter

          include blocks/advertisements