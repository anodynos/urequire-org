// Generated by CoffeeScript 1.10.0
var Q, app, crypto, express, fs;

express = require("express");

app = express();

fs = require("fs");

Q = require("q");

crypto = require("crypto");

app.enable("strict routing");


/*
express app configuration
 */

app.configure(function() {
  app.use(express.methodOverride());
  app.use(express.bodyParser());
  app.use(function(req, res, next) {
    if (req.url.substr(-1) === "/" && req.url.length > 1) {
      return res.redirect(301, req.url.slice(0, -1));
    } else {
      return next();
    }
  });
  app.use(app.router);
  app.use(express["static"]("build"));
  app.use(function(req, res) {
    return res.status(404).sendfile("build/404.html");
  });
  return app.use(express.errorHandler({
    dumpExceptions: false,
    showStack: false
  }));
});


/*
express app router
 */

app.get("/", function(req, res, next) {
  var filePath;
  filePath = "build" + req.url + ".html";
  if (req.url === "/") {
    filePath = "build/index.html";
  }
  return fs.exists(filePath, function(exists) {
    if (exists) {
      return res.sendfile(filePath);
    } else {
      return next();
    }
  });
});

app.get("*", function(req, res, next) {
  var filePath;
  req.url = req.url.toLowerCase();
  filePath = "build/docs/" + req.url + ".html";
  return fs.exists(filePath, function(exists) {
    if (exists) {
      return res.sendfile(filePath);
    } else {
      return next();
    }
  });
});

module.exports = function(config) {
  console.log(("Starting a server at `" + config.host + "` on port: ") + config.port);
  return app.listen(config.port);
};
